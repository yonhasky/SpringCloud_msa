server:
  port: 8000
  
eureka:  client:    register-with-eureka: true
    fetch-registry: true
    service-url:      defaultZone: http://localhost:8761/eureka
      
spring:  application:    name: apigateway-service
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
    
  cloud:    gateway:
      default-filters:      - name: GlobalFilter 
        args:          baseMessage: Spring Cloud Gateway Global Filter
          preLogger: true
          postLogger: true      routes: 
#      - id: user-service
#        uri: lb://USER-SERVICE #eureka naming
#        #조건
#        predicates:
#        - Path=/user-service/**
        
      - id: user-service
        uri: lb://USER-SERVICE #eureka naming
        predicates:   #조건
        - Path=/user-service/login
        - Method=POST
        filters:        - RemoveRequestHeader=Cookie
        - RewritePath=/user-service/(?<segment>.*), /$\{segment}    #/user-service 를 제외하기
        
      - id: user-service
        uri: lb://USER-SERVICE #eureka naming
        predicates:   #조건
        - Path=/user-service/users
        - Method=POST
        filters:
        - RemoveRequestHeader=Cookie
        - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        
      - id: user-service
        uri: lb://USER-SERVICE #eureka naming
        predicates:   #조건
        - Path=/user-service/**
        - Method=GET
        filters:
        - RemoveRequestHeader=Cookie
        - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - AuthorizationHeaderFilter #GET으로 들어오는 건에 대한 검증필터 추가 회원가입,로그인은 검증 노필요
        
      - id: user-service
        uri: lb://USER-SERVICE #eureka naming
        predicates:   #조건
        - Path=/user-service/actuator/**      #actuator 설정
        - Method=GET,POST
        filters:
        - RemoveRequestHeader=Cookie
        - RewritePath=/user-service/(?<segment>.*), /$\{segment}
          
        
      - id: catalog-service
        uri: lb://CATALOG-SERVICE #eureka naming
        predicates:   #조건
        - Path=/catalog-service/**
              - id: order-service
        uri: lb://ORDER-SERVICE #eureka naming
        predicates:   #조건
        - Path=/order-service/**
        
        
        
        
        
      - id: first-service
        uri: lb://MY-FIRST-SERVICE #eureka naming #http://localhost:8091/
        predicates:   #조건        - Path=/first-service/**
        filters:#        - AddRequestHeader=first-request, first-request-header2
#        - AddRequestHeader=first-response, first-response-header2
        - CustomFilter     
      - id: second-service
        uri: lb://MY-SECOND-SERVICE #http://localhost:8092/
        predicates:
        - Path=/second-service/**
        filters:
#        - AddRequestHeader=second-request, second-request-header2
#        - AddRequestHeader=second-response, second-response-header2
        - name: CustomFilter
        - name: LoggingFilter
          args:            baseMessage: logging
            preLogger: true
            postLogger: true

#actuator 설정
management:  endpoints:    web:      exposure:        include: refresh, health, beans, httptrace, busrefresh
       
#config서버에서 가져옴 
#token:
#  secret: user_token
  
        
        